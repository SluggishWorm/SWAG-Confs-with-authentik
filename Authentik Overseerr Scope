from authentik.sources.plex.models import PlexSourceConnection
import json
 
connection = PlexSourceConnection.objects.filter(user=request.user).first()
if not connection:
    ak_logger.info("PLEX: No Plex connection found")
    return {}
 
base_url = "http://overseerr:5055" ##http://DOCKERNAMEOFOVERSEERR:PORTNUMBER
end_point = "/api/v1/auth/plex" ##PLEXAPIENDPOINT shouldnt need to be changed
token = "MTY2MDAxMTE5NTQzNTAxNjkzMmFmLWQ3ZmYtNDg5OC1iN2NjLTAwNGMxMWE2ZGU1OSk="##plex sign on token 
 
headers = {
    "Content-Type": "application/json",
}
 
data = {
    "authToken": connection.plex_token
}
 
response = requests.post(base_url + end_point,
                         headers=headers, data=json.dumps(data))
 
if (response.status_code == 200):
 
    sid_value = response.cookies.get("connect.sid")
    cookie_obj = f"connect.sid={sid_value}"
    ak_logger.info("PLEX: The request was a success!")
    return {
        "ak_proxy": {
            "user_attributes": {
                "additionalHeaders": {
                    "Set-Cookie": cookie_obj
                }
            }
        }
    }
else:
    ak_logger.info(f"PLEX: The request failed with: {response.text}")
    return {}